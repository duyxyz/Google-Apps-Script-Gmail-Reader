<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <base target="_top">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>·ª®ng d·ª•ng ƒë·ªçc Gmail</title>
  <style>
    body {
      font-family: Roboto, Arial, sans-serif;
      margin: 0;
      padding: 0;
      background: linear-gradient(135deg, #f6f8fa, #eef3ff);
      color: #3c4043;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }

    .container {
      flex-grow: 1;
      padding: 20px;
      max-width: 1200px;
      margin: 0 auto;
    }

    /* --- LOGIN PAGE --- */
    #login-page {
      display: flex;
      align-items: center;
      justify-content: center;
      flex-grow: 1;
      background: linear-gradient(135deg, #dbe9ff, #f6f8fa);
      opacity: 0;
      transform: translateY(10px);
    }
    .login-box {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(16px);
      border-radius: 16px;
      box-shadow: 0 12px 30px rgba(0,0,0,0.15);
      padding: 40px 32px;
      text-align: center;
      width: 100%;
      max-width: 360px;
      display: flex;
      flex-direction: column;
      gap: 16px;
    }
    .login-box h2 {
      margin: 0;
      font-size: 1.5em;
      color: #1a73e8;
      font-weight: 600;
    }
    .login-box input[type="password"],
    .login-box button {
      width: 100%;
      height: 44px;
      border-radius: 8px;
      font-size: 15px;
      box-sizing: border-box;
    }
    .login-box input[type="password"] {
      padding: 0 14px;
      border: 1px solid #dadce0;
      outline: none;
      transition: border-color 0.2s, box-shadow 0.2s;
    }
    .login-box input[type="password"]:focus {
      border-color: #1a73e8;
      box-shadow: 0 0 6px rgba(26,115,232,0.3);
    }
    .login-box button {
      background: #1a73e8;
      color: #fff;
      border: none;
      font-weight: 500;
      cursor: pointer;
      transition: background 0.3s, transform 0.2s;
    }
    .login-box button:hover {
      background: #1669c1;
      transform: scale(1.02);
    }
    .login-box button:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }
    .error-msg {
      color: #d93025;
      font-size: 14px;
      display: none;
      margin: 0;
    }

    /* --- MAIN PAGE --- */
    #main-page {
      display: none;
      flex-grow: 1;
      opacity: 0;
      transform: translateY(10px);
    }

    .tab-buttons {
      display: flex;
      margin-bottom: 15px;
      border-bottom: 1px solid #dadce0;
    }
    .tab-buttons button {
      background: transparent;
      border: none;
      padding: 12px 20px;
      cursor: pointer;
      font-size: 15px;
      color: #5f6368;
      position: relative;
      outline: none;
    }
    .tab-buttons button.active {
      color: #1a73e8;
      font-weight: 500;
    }
    .tab-buttons button.active::after {
      content: '';
      position: absolute;
      bottom: -1px;
      left: 0;
      width: 100%;
      height: 3px;
      background-color: #1a73e8;
      border-radius: 3px;
    }
    .tab-buttons button.active-spam {
      color: #d93025;
    }
    .tab-buttons button.active-spam::after {
      background-color: #d93025;
    }

    /* Controls */
    .controls {
      display: flex;
      align-items: center;
      justify-content: space-between;
      flex-wrap: wrap;
      gap: 16px;
      padding: 12px 0;
      border-bottom: 1px solid #dadce0;
    }
    .controls > * {
      display: flex;
      align-items: center;
      gap: 8px;
    }
    .controls input[type="number"],
    .controls button {
      height: 40px;
      border-radius: 8px;
    }
    .controls input[type="number"] {
      width: 70px;
      padding: 0 8px;
      border: 1px solid #dadce0;
    }
    .controls button {
      background: #1a73e8;
      color: #fff;
      border: none;
      padding: 0 16px;
      cursor: pointer;
      transition: background 0.3s;
    }
    .controls button:hover { background: #1669c1; }

    /* Email list */
    .email-list {
      background: #fff;
      border: 1px solid #dadce0;
      border-radius: 10px;
      overflow: hidden;
      margin-top: 15px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    }
    .email-row {
      display: grid;
      grid-template-columns: 50px 1fr 120px;
      gap: 12px;
      align-items: center;
      padding: 14px 18px;
      border-bottom: 1px solid #eee;
      cursor: pointer;
      transition: background 0.2s, transform 0.1s;
    }
    .email-row:last-child { border-bottom: none; }
    .email-row:hover { background: #f0f4ff; transform: translateX(2px); }

    .avatar {
      width: 40px; height: 40px;
      border-radius: 50%;
      background: #1a73e8;
      color: #fff;
      font-weight: bold;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 14px;
    }
    .email-row .content-wrapper {
      display: flex;
      flex-direction: column;
      min-width: 0;
    }
    .email-row .subject {
      font-weight: 500;
      color: #202124;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      font-size: 15px;
    }
    .email-row .snippet {
      color: #5f6368;
      font-size: 14px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
    .email-row .date {
      color: #5f6368;
      font-size: 14px;
      text-align: right;
    }
    .email-row.unread {
      background: #eef3ff;
      font-weight: 600;
    }

    /* Popup */
    .popup {
      display: none;
      position: fixed;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background: rgba(0, 0, 0, 0.6);
      z-index: 100;
      justify-content: center;
      align-items: center;
      opacity: 0;
      transform: translateY(10px);
    }
    .popup-content {
      background: #fff;
      border-radius: 12px;
      box-shadow: 0 10px 30px rgba(0,0,0,0.2);
      padding: 24px;
      position: relative;
      width: 90%;
      max-width: 800px;
      max-height: 90vh;
      overflow-y: auto;
      animation: zoomIn 0.3s ease;
      box-sizing: border-box;
    }
    .close-btn {
      position: absolute;
      top: 12px;
      right: 16px;
      cursor: pointer;
      font-size: 20px;
      color: #666;
    }
    @keyframes zoomIn {
      from { transform: scale(0.9); opacity: 0; }
      to { transform: scale(1); opacity: 1; }
    }

    .fade-in { animation: fadeIn 0.5s ease-in-out forwards; }
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }

    footer {
      background: #f6f8fa;
      color: #5f6368;
      text-align: center;
      padding: 15px 0;
      border-top: 1px solid #dadce0;
    }
  </style>
</head>
<body>
  <!-- LOGIN PAGE -->
  <div id="login-page">
    <div class="login-box">
      <h2>üîê ƒêƒÉng nh·∫≠p Gmail</h2>
      <input type="password" id="pin" placeholder="Nh·∫≠p m√£ PIN" autofocus>
      <button id="login-btn" onclick="login()"><span id="login-text">ƒêƒÉng nh·∫≠p</span></button>
      <p id="error" class="error-msg">M√£ PIN kh√¥ng ƒë√∫ng!</p>
    </div>
  </div>

  <!-- MAIN PAGE -->
  <div id="main-page" class="hidden container">
    <div class="tab-buttons">
      <button onclick="showTab('inbox', event)" class="active">H√≤m th∆∞</button>
      <button onclick="showTab('spam', event)">Th∆∞ r√°c</button>
    </div>

    <div class="controls">
      <div>
        <label>T·ª± ƒë·ªông t·∫£i l·∫°i 10s</label>
        <input type="checkbox" id="auto-reload-toggle">
      </div>
      <div>
        <input type="number" id="email-limit" min="1" max="50" value="10">
        <button id="reload-btn" onclick="manualReload()"><span id="reload-text">Load</span></button>
      </div>
    </div>

    <div id="inbox" class="tab-content active email-list">
      <div id="inbox-list"></div>
    </div>
    <div id="spam" class="tab-content email-list">
      <div id="spam-list"></div>
    </div>
  </div>

  <!-- POPUP -->
  <div id="email-popup" class="popup">
    <div class="popup-content">
      <span class="close-btn" onclick="closePopup()">‚úñ</span>
      <div id="email-content" class="email-body"></div>
    </div>
  </div>

  <footer>
    <p>·ª®ng d·ª•ng ƒë·ªçc Gmail - Ph√°t tri·ªÉn b·ªüi <strong>Nguy·ªÖn Minh Duy</strong></p>
    <p>¬© <span id="current-year"></span>. All rights reserved.</p>
  </footer>

  <script>
    let currentTab = 'inbox';
    let inboxEmails = [], spamEmails = [];
    let autoReloadInterval = null;
    const pageSize = 50;
    let currentPage = 1;

    async function login(event) {
      if (event && event.key === 'Enter') event.preventDefault();
      const btn = document.getElementById('login-btn');
      const text = document.getElementById('login-text');
      const error = document.getElementById('error');
      text.textContent = 'ƒêang ƒëƒÉng nh·∫≠p...';
      btn.disabled = true;
      try {
        const pin = document.getElementById('pin').value;
        const isValid = await new Promise(resolve => google.script.run.withSuccessHandler(resolve).validatePin(pin));
        if (isValid) {
          const expiryDays = await new Promise(resolve => google.script.run.withSuccessHandler(resolve).getPinExpiryDays());
          const expiry = new Date();
          expiry.setDate(expiry.getDate() + expiryDays);
          localStorage.setItem('pin', pin);
          localStorage.setItem('pinExpiry', expiry.getTime());
          showMainPage();
        } else error.style.display = 'block';
      } catch (e) {
        error.textContent = 'ƒê√£ x·∫£y ra l·ªói: ' + e.message;
        error.style.display = 'block';
      } finally {
        text.textContent = 'ƒêƒÉng nh·∫≠p';
        btn.disabled = false;
      }
    }

    function checkAutoLogin() {
      const saved = localStorage.getItem('pin');
      const expiry = localStorage.getItem('pinExpiry');
      if (saved && Date.now() < parseInt(expiry)) {
        google.script.run.withSuccessHandler(isValid => {
          if (isValid) {
            document.getElementById('login-page').style.display = 'none';
            document.getElementById('main-page').style.display = 'block';
            document.getElementById('main-page').classList.add('fade-in');
            manualReload();
          }
        }).validatePin(saved);
      }
    }

    async function showMainPage() {
      document.getElementById('login-page').style.display = 'none';
      document.getElementById('main-page').style.display = 'block';
      document.getElementById('main-page').classList.add('fade-in');
      await manualReload();
    }

    async function manualReload() {
      const btn = document.getElementById('reload-btn');
      const text = document.getElementById('reload-text');
      text.textContent = 'ƒêang t·∫£i...';
      btn.disabled = true;
      await loadAllEmails();
      (currentTab === 'inbox') ? loadEmails() : loadSpamEmails();
      text.textContent = 'Load';
      btn.disabled = false;
    }

    async function loadAllEmails() {
      const limit = parseInt(document.getElementById('email-limit').value) || 10;
      inboxEmails = await new Promise(resolve => google.script.run.withSuccessHandler(resolve).getAllEmailsWithHtml(limit));
      spamEmails = await new Promise(resolve => google.script.run.withSuccessHandler(resolve).getAllSpamEmailsWithHtml(limit));
    }

    function showTab(tab, event) {
      currentTab = tab;
      currentPage = 1;
      document.querySelectorAll('.tab-content').forEach(el => el.style.display = 'none');
      document.getElementById(tab).style.display = 'block';
      document.querySelectorAll('.tab-buttons button').forEach(btn => btn.classList.remove('active', 'active-spam'));
      if (tab === 'inbox') {
        event.target.classList.add('active');
        loadEmails();
      } else {
        event.target.classList.add('active-spam');
        loadSpamEmails();
      }
    }

    function paginate(arr, page) {
      return arr.slice((page - 1) * pageSize, page * pageSize);
    }

    function loadEmails() {
      const list = document.getElementById('inbox-list');
      list.innerHTML = '';
      paginate(inboxEmails, currentPage).forEach(email => renderEmailRow(list, email));
    }
    function loadSpamEmails() {
      const list = document.getElementById('spam-list');
      list.innerHTML = '';
      paginate(spamEmails, currentPage).forEach(email => renderEmailRow(list, email));
    }

    function renderEmailRow(container, email) {
      const row = document.createElement('div');
      row.className = `email-row ${email.isUnread ? 'unread' : ''}`;
      row.onclick = () => showEmailPopup(email);
      const avatar = document.createElement('div');
      avatar.className = 'avatar';
      avatar.textContent = email.from[0].toUpperCase();
      row.appendChild(avatar);
      const wrapper = document.createElement('div');
      wrapper.className = 'content-wrapper';
      const subject = document.createElement('span');
      subject.className = 'subject';
      subject.textContent = email.subject;
      wrapper.appendChild(subject);
      const snippet = document.createElement('span');
      snippet.className = 'snippet';
      snippet.textContent = email.snippet;
      wrapper.appendChild(snippet);
      row.appendChild(wrapper);
      const date = document.createElement('span');
      date.className = 'date';
      date.textContent = email.date;
      row.appendChild(date);
      container.appendChild(row);
    }

    async function showEmailPopup(email) {
      const content = document.getElementById('email-content');
      content.innerHTML = email.html || `<div>${email.snippet}</div><p style="color:#666;">Kh√¥ng t√¨m th·∫•y n·ªôi dung HTML ƒë·∫ßy ƒë·ªß.</p>`;
      document.getElementById('email-popup').style.display = 'flex';
      document.getElementById('email-popup').classList.add('fade-in');
      if (email.isUnread) {
        await new Promise(resolve => google.script.run.withSuccessHandler(resolve).markAsRead(email.id));
        email.isUnread = false;
        currentTab === 'inbox' ? loadEmails() : loadSpamEmails();
      }
    }
    function closePopup() {
      document.getElementById('email-popup').style.display = 'none';
      document.getElementById('email-popup').classList.remove('fade-in');
    }

    document.getElementById('auto-reload-toggle').addEventListener('change', function () {
      localStorage.setItem('autoReload', this.checked);
      if (this.checked) {
        manualReload();
        autoReloadInterval = setInterval(manualReload, 10000);
      } else clearInterval(autoReloadInterval);
    });

    window.onload = () => {
      checkAutoLogin();
      if (document.getElementById('login-page').style.display !== 'none')
        document.getElementById('login-page').classList.add('fade-in');
      const saved = localStorage.getItem('autoReload') === 'true';
      document.getElementById('auto-reload-toggle').checked = saved;
      if (saved) autoReloadInterval = setInterval(manualReload, 10000);
      document.getElementById('email-limit').addEventListener('input', () => {
        setTimeout(async () => {
          currentPage = 1;
          await loadAllEmails();
          (currentTab === 'inbox') ? loadEmails() : loadSpamEmails();
        }, 1000);
      });
      document.getElementById('current-year').textContent = new Date().getFullYear();
    };

    document.getElementById('email-popup').addEventListener('click', e => {
      if (e.target === document.getElementById('email-popup')) closePopup();
    });
    document.addEventListener('keydown', e => {
      if (e.key === 'Enter' && document.getElementById('login-page').style.display !== 'none') login(e);
      else if (e.key === 'Escape') closePopup();
    });
  </script>
</body>
</html>
